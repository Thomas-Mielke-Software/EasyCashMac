# read config
echo "Reading myappleid.config"
. ./myappleid.config
if [ -z "$appleid" ]
then
        echo "Error: Please add an entry 'appleid=<your_appleid_here>' to myappleid.config"
        exit 1
fi
if [ -z "$aspw" ]
then
        echo "Error: Please add an entry 'aspw=<your_app_specific_password_here>' to myappleid.config"
        exit 1
fi
echo "Notarisation will use apple id '$appleid'"

# remove remnants of previous build
rm EasyCT.zip

# unzip archive to EasyCash&Tax.app folder
echo "Unzipping original package..."
rm -rf EasyCash\&Tax.app
if [ -z "$1" ]
then
	packetzipfile="easyct-2.53.0-unsigned-v3.zip"
        echo "No parameter submitted. Using $packetzipfile instead."
fi
unzip -q "$packetzipfile"

# delete symlinks that would prevent Gatekeeper/spctl from passing otherwise
#echo "Deleting symlinks"
#rm EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c/users/crossover/Downloads
#rm EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c/users/crossover/Templates
#(seems to be no longer necessary to delete them)

# replace EC&T binaries and Info.plist with current versions
rm EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c/Program\ Files\ \(x86\)/EasyCash\&Tax/*.ecf
rm EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c/Program\ Files\ \(x86\)/EasyCash\&Tax/*.png
cp WindowsBinaries/* EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c/Program\ Files\ \(x86\)/EasyCash\&Tax
cp formula EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64/drive_c
cp Info.plist EasyCash\&Tax.app/Contents

# add icon
#rm -rf MyIcon.iconset
#mkdir MyIcon.iconset
#sips -z 16 16     EasyCash_MacOS_Icon.png --out icon_16x16.png
#mv icon_16x16.png EasyCash.iconset
#sips -z 32 32     EasyCash_MacOS_Icon.png --out icon_16x16@2x.png
#mv icon_16x16@2x.png EasyCash.iconset
#sips -z 32 32     EasyCash_MacOS_Icon.png --out icon_32x32.png
#mv icon_32x32.png EasyCash.iconset
#sips -z 64 64     EasyCash_MacOS_Icon.png --out icon_32x32@2x.png
#mv icon_32x32@2x.png EasyCash.iconset
#sips -z 128 128   EasyCash_MacOS_Icon.png --out icon_128x128.png
#mv icon_128x128.png EasyCash.iconset
#sips -z 256 256   EasyCash_MacOS_Icon.png --out icon_128x128@2x.png
#mv icon_128x128@2x.png EasyCash.iconset
#sips -z 256 256   EasyCash_MacOS_Icon.png --out icon_256x256.png
#mv icon_256x256.png EasyCash.iconset
#sips -z 512 512   EasyCash_MacOS_Icon.png --out icon_256x256@2x.png
#mv icon_256x256@2x.png EasyCash.iconset
#sips -z 512 512   EasyCash_MacOS_Icon.png --out icon_512x512.png
#mv icon_512x5126.png EasyCash.iconset
#cp EasyCash_MacOS_Icon.png EasyCash.iconset
#mv EasyCash.iconset/EasyCash_MacOS_Icon.png EasyCash.iconset/icon_512x512@2x.png
#iconutil -c icns "$(pwd)/EasyCash.iconset"
#cp EasyCash.icns EasyCash\&Tax.app/Contents/Resources
#rm EasyCash.icns
#now in CrossOverOEM.icns

# refresh package (essentially from portjump refresh script) -- updates files database. Explanation: 
# In the easyct64 folder is a file named 'files'. This records all the directories and files included in the bottle, and the timestamps of the files.
# This is then used to compare against the local version of the bottle on the end user's machine, to identify if there are updates that need to be
# applied (copying or linking new files, removing old files, etc). The command I provided basically just updates the 'files' file. It can be simplified
# to a single line:
WINEPREFIX="EasyCash\&Tax.app/Contents/SharedSupport/easyct/support/easyct64" CX_ROOT="EasyCash\&Tax.app/Contents/SharedSupport/easyct" "$root/bin/wineprefixcreate" --snapshot
# You need to run this after any changes you make to any of the files under "drive_c". It will update the 'files' file with any changes you've made.

# sign the package using Codeweavers script
echo "Signing package..."
# ./sign_codeV4 "$(pwd)/EasyCash&Tax.app"  # old signscript from Codeweavers
./sign_portjump "$(pwd)/EasyCash&Tax.app"  # new signscript from PortJump Toolkit (unauthorised redistribution prohibited :-/ )

# archive signed package to a zip for notarisation
echo "zipping package for notarisation..."
ditto -c -k --keepParent EasyCash\&Tax.app EasyCT.zip

# prepare option if team id was set
if [ -z "$ascprov" ]
then
	ascprovoption=
else
	ascprovoption="--asc-provider"
	teamidoption="--team-id"
fi

echo "notarising app..."

# ___ old notarization process using altool ___
#output=$(xcrun notarytool --notarize-app --primary-bundle-id de.easyct.easyct $ascprovoption $ascprov -u "$appleid" -p "$aspw" --file EasyCT.zip)
#
#ticket_id=$(echo "$output" | grep RequestUUID | awk '{print $3}')
#
#if [ -z "$ticket_id" ]
#then
#	echo "Error: No ticket id was returned.\n\n$output"
#        exit 1
#fi
#
#echo "Notarisation ticket: $ticket_id"
#echo "Waiting 120 seconds for Apple Notarizer to finish processing..."
#sleep 120
#xcrun notarytool --notarization-info "$ticket_id" -u "$appleid" -p "$aspw"
#echo "xcrun notarytool --notarization-info \"$ticket_id\" -u \"$appleid\" -p \"$aspw\""

# ___ new notarisation process using notarytool ___
xcrun notarytool submit EasyCT.zip --apple-id "$appleid" $teamidoption $ascprov --password "$aspw" --wait

echo "Stapeling..."
output=$(xcrun stapler staple "EasyCash&Tax.app")
echo $output
stapling_worked=$(echo "$output" | grep "The staple and validate action worked")
if [ -z "$stapling_worked" ]
then
	echo "test"
        echo "Error: stapling didnt work, it seems. Try to run"
	echo "   xcrun stapler staple EasyCash\\&Tax.app"
	echo "Then check notarisation with"
	echo "   spctl --assess --type open --context context:primary-signature --verbose EasyCash\\&Tax.app"
	echo "Finally zip the package using"
	echo "   ditto -c -k --keepParent EasyCash\\&Tax.app EasyCT4Mac.zip"
        exit 1
fi

echo "Checking stapled EasyCash&Tax.app folder using spctl -a..."
spctl --assess --type open --context context:primary-signature --verbose EasyCash\&Tax.app

echo "Final packaging to EasyCT4Mac.zip..."
rm EasyCT4Mac.zip
ditto -c -k --keepParent EasyCash\&Tax.app EasyCT4Mac.zip

# clean-up temporary zip, used for notarisation
rm EasyCT.zip
